import java.util.Scanner;

public class ClimbStairs {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        System.out.println(ClimbDP(n,new int[n+1]));
    }
    public static int ClimbDP(int n,int [] qb){
        if (n==0){
            return 1;
        }else if (n<0){
            return 0;
        }
        if(qb[n]>0){
            return qb[n];
        }
        int nm1=ClimbDP(n-1,qb);
        int nm2=ClimbDP(n-2,qb);
        int nm3=ClimbDP(n-3,qb);
        int cp=nm1+nm2+nm3;
        qb[n]=cp;
        return cp;

    }
}


////////////OR-BY tabulation method
//public static int countpathTab(int n){
//    int []dp=new int[n+1];
//    dp[0]=1;
//    for (int i = 1; i <=n ; i++) {
//        if (i==1){
//            dp[i]=dp[i-1];
//        }else if (i==2){
//            dp[i]=dp[i-1]+dp[i-2];
//        }else{
//            dp[i]=dp[i-1]+dp[i-2]+dp[i-3];
//        }
//    }
//    return dp[n];
//}
