import java.util.Scanner;

public class PaintHouse_Many {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int c = sc.nextInt();
        int[][] arr = new int[n][c];
        for (int i = 0; i < arr.length; i++) {
            for (int j = 0; j < arr[0].length; j++) {
                arr[i][j] = sc.nextInt();
            }
        }
        int[][] dp = new int[n][c];
//
//        for (int j = 0; j < arr[0].length; j++) {
//            dp[0][j] = arr[0][j];
//        }
//        for (int i = 1; i < dp.length; i++) {
//            for (int j = 0; j < dp[0].length; j++) {
//                int min = Integer.MAX_VALUE;
//                for (int k = 0; k < dp[0].length; k++) {
//                    if (k != j) {
//                        if (dp[i - 1][k] < min) {
//                            min = dp[i - 1][k];
//                        }
//                    }
//                }
//                dp[i][j] = arr[i][j] + min;
//            }
//        }
//        int min = Integer.MAX_VALUE;
//        for (int k = 0; k < dp[0].length; k++) {
//            if (dp[n - 1][k] < min) {
//                min = dp[n - 1][k];
//            }
//        }
//        System.out.println(min);
//
        //IT'S TIME COMPLEXITY=N^3
      //  Therefore optimised soln(n^2) is also done
//METHOD 2
    int Least=Integer.MAX_VALUE;
    int secondLeast=Integer.MAX_VALUE;
        for (int j = 0; j < arr[0].length; j++) {
            dp[0][j] = arr[0][j];
            if (arr[0][j]<=Least){
                secondLeast=Least;
                Least=arr[0][j];
            }else if (arr[0][j]<=secondLeast){
                secondLeast=arr[0][j];
            }
        }
        for (int i = 1; i < dp.length; i++) {
            int newLeast=Integer.MAX_VALUE;
            int newsecondLeast=Integer.MAX_VALUE;
            for (int j = 0; j < dp[0].length; j++) {
                if (Least==dp[i-1][j]){
                    dp[i][j]=secondLeast+arr[i][j];
                }else{
                    dp[i][j]=Least+arr[i][j];
                }

                if (dp[i][j]<=newLeast){
                    newsecondLeast=newLeast;
                    newLeast=dp[i][j];
                }else if (dp[i][j]<=newsecondLeast){
                    newsecondLeast=dp[i][j];
                }
            }
            Least=newLeast;
            secondLeast=newsecondLeast;
        }
        System.out.println(Least);

   }
}
